// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SimpleMessageBoard {
    address public owner;
    string public message;

    event MessageUpdated(address indexed sender, string newMessage);

    constructor() {
        owner = msg.sender;
        message = "Welcome to the Simple Message Board!";
    }

    modifier onlyOwner() {
        require(msg.sender == owner, "Only the owner can call this function");
        _;
    }

    function updateMessage(string memory newMessage) external onlyOwner {
        message = newMessage;
        emit MessageUpdated(msg.sender, newMessage);
    }

    function getMessage() external view returns (string memory) {
        return message;
    }
}
